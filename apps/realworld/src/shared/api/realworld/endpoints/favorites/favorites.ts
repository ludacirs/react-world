/**
 * Generated by orval v6.17.0 🍺
 * Do not edit manually.
 * Conduit API
 * Conduit API
 * OpenAPI spec version: 1.0.0
 */
import { useMutation } from '@tanstack/react-query';
import type { UseMutationOptions, MutationFunction } from '@tanstack/react-query';
import type { SingleArticleResponse, GenericErrorModel } from '../../models';
import { axiosInstance } from '../../axios/axiosInstance';

/**
 * Favorite an article. Auth is required
 * @summary Favorite an article
 */
export const createArticleFavorite = (slug: string) => {
  return axiosInstance<SingleArticleResponse>({ url: `/articles/${slug}/favorite`, method: 'post' });
};

export const getCreateArticleFavoriteMutationOptions = <
  TError = void | GenericErrorModel,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<Awaited<ReturnType<typeof createArticleFavorite>>, TError, { slug: string }, TContext>;
}): UseMutationOptions<Awaited<ReturnType<typeof createArticleFavorite>>, TError, { slug: string }, TContext> => {
  const { mutation: mutationOptions } = options ?? {};

  const mutationFn: MutationFunction<Awaited<ReturnType<typeof createArticleFavorite>>, { slug: string }> = props => {
    const { slug } = props ?? {};

    return createArticleFavorite(slug);
  };

  return { mutationFn, ...mutationOptions };
};

export type CreateArticleFavoriteMutationResult = NonNullable<Awaited<ReturnType<typeof createArticleFavorite>>>;

export type CreateArticleFavoriteMutationError = void | GenericErrorModel;

/**
 * @summary Favorite an article
 */
export const useCreateArticleFavorite = <TError = void | GenericErrorModel, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<Awaited<ReturnType<typeof createArticleFavorite>>, TError, { slug: string }, TContext>;
}) => {
  const mutationOptions = getCreateArticleFavoriteMutationOptions(options);

  return useMutation(mutationOptions);
};
/**
 * Unfavorite an article. Auth is required
 * @summary Unfavorite an article
 */
export const deleteArticleFavorite = (slug: string) => {
  return axiosInstance<SingleArticleResponse>({ url: `/articles/${slug}/favorite`, method: 'delete' });
};

export const getDeleteArticleFavoriteMutationOptions = <
  TError = void | GenericErrorModel,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<Awaited<ReturnType<typeof deleteArticleFavorite>>, TError, { slug: string }, TContext>;
}): UseMutationOptions<Awaited<ReturnType<typeof deleteArticleFavorite>>, TError, { slug: string }, TContext> => {
  const { mutation: mutationOptions } = options ?? {};

  const mutationFn: MutationFunction<Awaited<ReturnType<typeof deleteArticleFavorite>>, { slug: string }> = props => {
    const { slug } = props ?? {};

    return deleteArticleFavorite(slug);
  };

  return { mutationFn, ...mutationOptions };
};

export type DeleteArticleFavoriteMutationResult = NonNullable<Awaited<ReturnType<typeof deleteArticleFavorite>>>;

export type DeleteArticleFavoriteMutationError = void | GenericErrorModel;

/**
 * @summary Unfavorite an article
 */
export const useDeleteArticleFavorite = <TError = void | GenericErrorModel, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<Awaited<ReturnType<typeof deleteArticleFavorite>>, TError, { slug: string }, TContext>;
}) => {
  const mutationOptions = getDeleteArticleFavoriteMutationOptions(options);

  return useMutation(mutationOptions);
};
